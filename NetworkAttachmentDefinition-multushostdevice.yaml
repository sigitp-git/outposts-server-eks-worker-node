apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
  name: vfio-dpdk-hostdevice-net-1
spec:
  config: '{
        "cniVersion": "0.3.1",
        "type": "host-device",
        "pciBusID": "0000:00:07.0",
        "ipam": {
                "type": "static",
                "addresses": [
                    {
                        "address": "10.0.10.93/24",
                        "gateway": "0.0.0.0"
                    }
                ],
                "routes": [
                    { "dst": "10.0.10.0/24", "gw": "0.0.0.0" }
                ]
            }
          }'
# eth0 from VPC CNI, net1 from host-device ENI with vfio-pci driver, bound using dpdk-devbind.py, for dpdk traffic
# kubectl get network-attachment-definitions
# "pciBusID": "0000:00:07.0" is from SRIOV-DP configmap:
#            {
#                "resourceName": "sriov_netdevice_2",
#                "selectors": {
#                    "vendors": [
#                        "1d0f"
#                    ],
#                    "devices": [
#                        "ec20"
#                    ],
#                    "drivers": [
#                        "ena",
#                        "igb_uio",
#                        "vfio-pci"
#                    ],
#                    "pciAddresses": [
#                        "0000:00:07.0"
#                    ]
#                }
#
# "pciBusID": "0000:00:07.0" bound to VFIO driver for DPDK
# [root@ip-172-31-148-193 custom-ami-scripts]# ./dpdk-devbind.py -s
# 
# Network devices using DPDK-compatible driver
# ============================================
# 0000:00:07.0 'Elastic Network Adapter (ENA) ec20' drv=vfio-pci unused=ena
# 
# Network devices using kernel driver
# ===================================
# 0000:00:05.0 'Elastic Network Adapter (ENA) ec20' if=ens5 drv=ena unused=vfio-pci *Active*
# 0000:00:06.0 'Elastic Network Adapter (ENA) ec20' if=ens6 drv=ena unused=vfio-pci 
# 0000:00:08.0 'Elastic Network Adapter (ENA) ec20' if=ens8 drv=ena unused=vfio-pci 
#
#
#
#
# $ kubectl describe po ubuntu-netutils2
#
# Events:
#  Type    Reason          Age   From               Message
#  ----    ------          ----  ----               -------
#  Normal  Scheduled       8s    default-scheduler  Successfully assigned default/ubuntu-netutils2 to ip-172-31-156-11.ec2.internal
#  Normal  AddedInterface  6s    multus             Add eth0 [172.31.144.120/32] from aws-cni
#  Normal  AddedInterface  6s    multus             Add net1 [10.0.10.93/24] from default/vfio-dpdk-hostdevice-net-1
#  Normal  Pulled          6s    kubelet            Container image "291615555612.dkr.ecr.us-east-1.amazonaws.com/sigitp-ecr:ubuntu-netutils" already present on machine
#  Normal  Created         6s    kubelet            Created container ubuntu-netutils
#  Normal  Started         6s    kubelet            Started container ubuntu-netutils
#
#
#
# Admin:~/environment $ kubectl exec -it ubuntu-netutils2 -- bash
# root@ubuntu-netutils2:/src# ifconfig
# eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 9001
#        inet 172.31.144.120  netmask 255.255.255.255  broadcast 0.0.0.0
#        inet6 fe80::bce2:3eff:febe:c683  prefixlen 64  scopeid 0x20<link>
#        ether be:e2:3e:be:c6:83  txqueuelen 0  (Ethernet)
#        RX packets 5  bytes 446 (446.0 B)
#        RX errors 0  dropped 0  overruns 0  frame 0
#        TX packets 9  bytes 726 (726.0 B)
#        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
#
# lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
#        inet 127.0.0.1  netmask 255.0.0.0
#        inet6 ::1  prefixlen 128  scopeid 0x10<host>
#        loop  txqueuelen 1000  (Local Loopback)
#        RX packets 0  bytes 0 (0.0 B)
#        RX errors 0  dropped 0  overruns 0  frame 0
#        TX packets 0  bytes 0 (0.0 B)
#        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
#
# root@ubuntu-netutils2:/src# env
# KUBERNETES_SERVICE_PORT_HTTPS=443
# KUBERNETES_SERVICE_PORT=443
# HOSTNAME=ubuntu-netutils2
# PWD=/src
# HOME=/root
# KUBERNETES_PORT_443_TCP=tcp://10.100.0.1:443
# LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# PCIDEVICE_INTEL_COM_SRIOV_NETDEVICE_3_INFO={"0000:00:08.0":{"generic":{"deviceID":"0000:00:08.0"}}}
# PCIDEVICE_INTEL_COM_SRIOV_NETDEVICE_3=0000:00:08.0
# PCIDEVICE_INTEL_COM_SRIOV_NETDEVICE_2=0000:00:07.0
# PCIDEVICE_INTEL_COM_SRIOV_NETDEVICE_1=0000:00:06.0
# LESSCLOSE=/usr/bin/lesspipe %s %s
# TERM=xterm
# LESSOPEN=| /usr/bin/lesspipe %s
# SHLVL=1
# KUBERNETES_PORT_443_TCP_PROTO=tcp
# PCIDEVICE_INTEL_COM_SRIOV_NETDEVICE_2_INFO={"0000:00:07.0":{"generic":{"deviceID":"0000:00:07.0"},"vfio":{"dev-mount":"/dev/vfio/0","mount":"/dev/vfio/vfio"}}}
# KUBERNETES_PORT_443_TCP_ADDR=10.100.0.1
# KUBERNETES_SERVICE_HOST=10.100.0.1
# KUBERNETES_PORT=tcp://10.100.0.1:443
# KUBERNETES_PORT_443_TCP_PORT=443
# PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
# PCIDEVICE_INTEL_COM_SRIOV_NETDEVICE_1_INFO={"0000:00:06.0":{"generic":{"deviceID":"0000:00:06.0"}}}
# _=/usr/bin/env
# root@ubuntu-netutils2:/src# 
#
#
# NOTE: since it's VFIO, you can see the DPDK interface with ifconfig, both on the host, and on the pod
# Admin:~/environment $ kubectl exec -it ubuntu-netutils2 -- bash
# root@ubuntu-netutils2:/src# ifconfig
# eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 9001
#        inet 172.31.144.120  netmask 255.255.255.255  broadcast 0.0.0.0
#        inet6 fe80::bce2:3eff:febe:c683  prefixlen 64  scopeid 0x20<link>
#        ether be:e2:3e:be:c6:83  txqueuelen 0  (Ethernet)
#        RX packets 5  bytes 446 (446.0 B)
#        RX errors 0  dropped 0  overruns 0  frame 0
#        TX packets 9  bytes 726 (726.0 B)
#        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
#
# lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
#        inet 127.0.0.1  netmask 255.0.0.0
#        inet6 ::1  prefixlen 128  scopeid 0x10<host>
#        loop  txqueuelen 1000  (Local Loopback)
#        RX packets 0  bytes 0 (0.0 B)
#        RX errors 0  dropped 0  overruns 0  frame 0
#        TX packets 0  bytes 0 (0.0 B)
#        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
